C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.) DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /********
   2            
   3              DLNU School Creative Lab Exam Project
   4              Designed by MuTong233
   5              
   6              Copyright MyGensou Studio 2018-2022
   7              
   8              The code is licensed under the Unlicensed Open Source License
   9              
  10          ********/
  11          
  12          #include<extra_function.h>
  13          
  14          /*******
  15            
  16            Nixie Table 
  17            
  18            Code: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  22 23 24 25  26
  19                  | | | | | | | | | | |  |  |  |  |  |  |  |  |  |  |  |   |  |  |  |   |
  20            Reff: 0 1 2 3 4 5 6 7 8 9 a  b  c  d  e  f  h  j  l  t  -  NUL p  o  n  u/v r
  21            
  22          ********/
  23          
  24          // Data type define
  25          typedef unsigned int u16;
  26          typedef unsigned char u8;
  27          
  28          // Data Storage
  29          int GameDiff,GameInProgress,KeyOp,Score1P,Score2P,GameWinner,GameStarter;
  30          int DelayTime=150;
  31          
  32          // Initialize Game Data
  33          void GameDataInitialize()
  34          {
  35   1        GameDiff=0;
  36   1        GameInProgress=0;
  37   1        KeyOp=0;
  38   1        Score1P=0;
  39   1        Score2P=0;
  40   1        GameWinner=0;
  41   1        DelayTime=150;
  42   1        GameStarter=1;
  43   1      }
  44          
  45          // Game Difficult Selector
  46          void GameDiffSelect()
  47          {
  48   1        while(1)
  49   1        {
  50   2          doShowNixie(1,5);
  51   2          doShowNixie(1,21);
  52   2          doShowNixie(2,14);
  53   2          doShowNixie(2,21);
  54   2          doShowNixie(3,18);
C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 2   

  55   2          doShowNixie(3,21);
  56   2          doShowNixie(4,20);
  57   2          doShowNixie(4,21);
  58   2          doShowNixie(5,13);
  59   2          doShowNixie(5,21);
  60   2          doShowNixie(6,1);
  61   2          doShowNixie(6,21);
  62   2          doShowNixie(7,15);
  63   2          doShowNixie(7,21);
  64   2          doShowNixie(8,15);
  65   2          doShowNixie(8,21);
  66   2          GameDiff=doKeyScan(0);
  67   2          if(GameDiff!=0) break;
  68   2        }
  69   1        for(DelayTime=150;DelayTime>0;DelayTime--)
  70   1        {
  71   2          doShowNixie(1,13);
  72   2          doShowNixie(1,21);
  73   2          doShowNixie(2,1);
  74   2          doShowNixie(2,21);
  75   2          doShowNixie(3,15);
  76   2          doShowNixie(3,21);
  77   2          doShowNixie(4,15);
  78   2          doShowNixie(4,21);
  79   2          doShowNixie(7,GameDiff);
  80   2          doShowNixie(7,21);
  81   2        }
  82   1      }
  83          
  84          // Game Starter Selector
  85          void GameInitSelect()
  86          {
  87   1        GameStarter=0;
  88   1        while(1)
  89   1        {
  90   2          doShowNixie(1,5);
  91   2          doShowNixie(1,21);
  92   2          doShowNixie(2,14);
  93   2          doShowNixie(2,21);
  94   2          doShowNixie(3,18);
  95   2          doShowNixie(3,21);
  96   2          doShowNixie(4,20);
  97   2          doShowNixie(4,21);
  98   2          doShowNixie(5,15);
  99   2          doShowNixie(5,21);
 100   2          doShowNixie(6,26);
 101   2          doShowNixie(6,21);
 102   2          doShowNixie(7,5);
 103   2          doShowNixie(7,21);
 104   2          doShowNixie(8,19);
 105   2          doShowNixie(8,21);
 106   2          GameStarter=doKeyScan(0);
 107   2          if(GameStarter==1||GameStarter==2) break;
 108   2        }
 109   1        for(DelayTime=150;DelayTime>0;DelayTime--)
 110   1        {
 111   2          doShowNixie(1,15);
 112   2          doShowNixie(1,21);
 113   2          doShowNixie(2,26);
 114   2          doShowNixie(2,21);
 115   2          doShowNixie(3,5);
 116   2          doShowNixie(3,21);
C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 3   

 117   2          doShowNixie(4,19);
 118   2          doShowNixie(4,21);
 119   2          doShowNixie(7,GameStarter);
 120   2          doShowNixie(7,21);
 121   2        }
 122   1      }
 123          
 124          // Result Check Tools
 125          void ScoreCheck()
 126          {
 127   1        if(Score1P==10) GameWinner=1;
 128   1        if(Score2P==10) GameWinner=2;
 129   1        if(Score1P==10&&Score2P==10) GameWinner=3;
 130   1      }
 131          
 132          // Show Game Result
 133          void GameResultShow(u16 i)
 134          {
 135   1          for(DelayTime=300;DelayTime>0;DelayTime--)
 136   1          {
 137   2            doShowNixie(1,20);
 138   2            doShowNixie(1,21);
 139   2            doShowNixie(2,i);
 140   2            doShowNixie(2,21);
 141   2            doShowNixie(3,22);
 142   2            doShowNixie(3,21);
 143   2            doShowNixie(4,20);
 144   2            doShowNixie(4,21);
 145   2            doBeep(1);
 146   2          }
 147   1      }
 148          
 149          // Check Game Result
 150          void GameResultCheck()
 151          {
 152   1        switch(GameWinner)
 153   1        {
 154   2          case 0:break;
 155   2          case 1:GameResultShow(1);break;
 156   2          case 2:GameResultShow(2);break;
 157   2          case 3:doErrorReport(8,7);break;
 158   2          default:doErrorReport(6,3);break;
 159   2        }
 160   1      }
 161          
 162          // Show the Score
 163          void ShowScore()
 164          {
 165   1          for(DelayTime=450;DelayTime>0;DelayTime--)
 166   1          {
 167   2            doShowNixie(1,1);
 168   2            doShowNixie(1,21);
 169   2            doShowNixie(2,20);
 170   2            doShowNixie(2,21);
 171   2            doShowNixie(3,Score1P/10);
 172   2            doShowNixie(3,21);
 173   2            doShowNixie(4,Score1P%10);
 174   2            doShowNixie(4,21);
 175   2            doShowNixie(5,2);
 176   2            doShowNixie(5,21);
 177   2            doShowNixie(6,20);
 178   2            doShowNixie(6,21);
C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 4   

 179   2            doShowNixie(7,Score2P/10);
 180   2            doShowNixie(7,21);
 181   2            doShowNixie(8,Score2P%10);
 182   2            doShowNixie(8,21);
 183   2          }
 184   1      }
 185          
 186          // Main Game Function
 187          void GameMain()
 188          {
 189   1        int i,away=0;
 190   1        GameInProgress=1; // Let Game Kick the bass!
 191   1        
 192   1        // Game main logic
 193   1        while(away!=1)
 194   1        {
 195   2          KeyOp=0;
 196   2          away=0;
 197   2          
 198   2          // start from 1p
 199   2          for(i=0;i<7;i++)
 200   2          {
 201   3            if(GameStarter!=1) {break;}
 202   3            doShowLED(i,100);
 203   3            switch(GameDiff)
 204   3            {
 205   4              case 0:doErrorReport(3,6);break;
 206   4              case 1:Delay60ms();KeyOp=doKeyScan(0);if(KeyOp!=0) {away=1;break;}Delay40ms();break;
 207   4              case 2:Delay60ms();break;
 208   4              case 3:Delay40ms();break;
 209   4              case 4:Delay20ms();break;
 210   4              default:doErrorReport(3,7);break;
 211   4            }
 212   3            KeyOp=doKeyScan(0);
 213   3            if(KeyOp!=0) {away=1;break;}
 214   3          }
 215   2          
 216   2          // Check if pre-pressed btn
 217   2          if(away==1) {Score1P=Score1P+1;GameStarter=1;break;} else {away=0;}
 218   2          
 219   2          // Now it's the fate to check the key!
 220   2          switch(GameDiff)
 221   2            {
 222   3              case 0:doErrorReport(4,1);break;
 223   3              case 1:DelayTime=1000;break;
 224   3              case 2:DelayTime=650;break;
 225   3              case 3:DelayTime=425;break;
 226   3              case 4:DelayTime=200;break;
 227   3              default:doErrorReport(4,2);break;
 228   3            }
 229   2          
 230   2          // Wait for input
 231   2          for(;DelayTime>0;DelayTime--)
 232   2          {
 233   3            if(GameStarter!=1) {break;}
 234   3            doShowLED(7,100);
 235   3            KeyOp=doKeyScan(0);
 236   3            if(KeyOp==0) {away=1;} else {away=0;break;}
 237   3          }
 238   2          
 239   2          // If time's up, terminate the game
 240   2          if(DelayTime==0||away==1) {Score1P=Score1P+1;GameStarter=1;break;}
C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 5   

 241   2          
 242   2          // Otherwise reset key counter
 243   2          KeyOp=0;
 244   2          away=0;
 245   2          GameStarter=2;
 246   2          
 247   2          // now it's 2p's turn
 248   2          for(i=0;i<7;i++)
 249   2          {
 250   3            if(GameStarter!=2) {break;}
 251   3            doShowLED(7-i,100);
 252   3            switch(GameDiff)
 253   3            {
 254   4              case 0:doErrorReport(3,6);break;
 255   4              case 1:Delay60ms();KeyOp=doKeyScan(0);if(KeyOp!=0) {away=1;break;}Delay40ms();break;
 256   4              case 2:Delay60ms();break;
 257   4              case 3:Delay40ms();break;
 258   4              case 4:Delay20ms();break;
 259   4              default:doErrorReport(3,7);break;
 260   4            }
 261   3            KeyOp=doKeyScan(0);
 262   3            if(KeyOp!=0) {away=1;break;}
 263   3          }
 264   2          
 265   2          if(away==1) {Score2P=Score2P+1;GameStarter=2;break;} else {away=0;}
 266   2          
 267   2          // Now it's the fate to check the key!
 268   2          switch(GameDiff)
 269   2            {
 270   3              case 0:doErrorReport(4,1);break;
 271   3              case 1:DelayTime=1000;break;
 272   3              case 2:DelayTime=650;break;
 273   3              case 3:DelayTime=425;break;
 274   3              case 4:DelayTime=200;break;
 275   3              default:doErrorReport(4,2);break;
 276   3            }
 277   2            
 278   2          for(;DelayTime>0;DelayTime--)
 279   2          {
 280   3            if(GameStarter!=2) {break;}
 281   3            doShowLED(0,100);
 282   3            KeyOp=doKeyScan(0);
 283   3            if(KeyOp==0) {away=1;} else {away=0;break;}
 284   3          }
 285   2          
 286   2          if(DelayTime==0||away==1) {Score2P=Score2P+1;GameStarter=2;break;} else {away=0;}
 287   2          GameStarter=1;
 288   2        }
 289   1        GameInProgress=0; // Stop the logic
 290   1      }
 291          
 292          // main
 293          void main()
 294          {
 295   1        SystemPost();
 296   1        GameDataInitialize();
 297   1        CountDown(5);
 298   1        doWaitLED(3);
 299   1        while(1)
 300   1        {
 301   2          SystemAttract();
 302   2          doWaitLED(3);
C51 COMPILER V9.60.0.0   MAIN                                                              11/22/2022 20:01:02 PAGE 6   

 303   2          GameDiffSelect();
 304   2          doWaitLED(3);
 305   2          GameInitSelect();
 306   2          doWaitLED(3);
 307   2          CountDown(5);
 308   2          doClearDisp();
 309   2          while(1)
 310   2          {
 311   3            GameMain();
 312   3            ShowScore();
 313   3            ScoreCheck();
 314   3            CountDown(3);
 315   3            if(GameWinner!=0) break;
 316   3            if(GameInProgress==1) doErrorReport(5,1);
 317   3          }
 318   2          doWaitLED(3);
 319   2          GameResultCheck();
 320   2          doWaitLED(3);
 321   2          if(GameInProgress==1) break;
 322   2          GameDataInitialize();
 323   2          CountDown(5);
 324   2          doClearDisp();
 325   2        }
 326   1        exti0_init();
 327   1        doErrorReport(6,8);
 328   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2094    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
